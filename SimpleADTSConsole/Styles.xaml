<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SimpleADTSConsole"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                    xmlns:tools="clr-namespace:SimpleADTSConsole.Tools">
    <Style x:Key="MiddlBtnStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Width" Value="90"/>
    </Style>
    <Style x:Key="BigBtnStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Width" Value="140"/>
    </Style>
    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Margin" Value="3"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Margin" Value="3"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <iconPacks:PackIconModern x:Key="ConnectIcon" Kind="Connect" VerticalAlignment="Center" HorizontalAlignment="Center" Height="30" Width="30"/>
    <iconPacks:PackIconModern x:Key="DisconnectIcon" Kind="Disconnect" VerticalAlignment="Center" HorizontalAlignment="Center" Height="30" Width="30"/>
    <iconPacks:PackIconEntypo x:Key="StartIcon" Kind="ControllerStop" VerticalAlignment="Center" HorizontalAlignment="Center"/>
    <iconPacks:PackIconEntypo x:Key="StopIcon" Kind="ControllerPlay" VerticalAlignment="Center" HorizontalAlignment="Center"/>
    <iconPacks:PackIconModern x:Key="SettingsIcon" Kind="Settings" VerticalAlignment="Center" HorizontalAlignment="Center"/>
    <iconPacks:PackIconModern x:Key="StatisticIcon" Kind="GraphBar" VerticalAlignment="Center" HorizontalAlignment="Center"/>
    <DataTemplate x:Key="StatisticItemDt" DataType="tools:CurrentParameterState">
        <Grid>
            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Margin" Value="3,0"/>
                </Style>
                <Style TargetType="TextBox">
                    <Setter Property="Margin" Value="3,0"/>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{Binding Name}" Grid.ColumnSpan="4" Grid.Column="0" Grid.Row="0"/>
            <TextBlock Text="Value" Grid.Column="0" Grid.Row="1"/>
            <TextBox Text="{Binding Value}" Grid.Column="1" Grid.Row="1" IsReadOnly="True"/>
            <TextBlock Text="Date" Grid.Column="0" Grid.Row="2"/>
            <TextBox Text="{Binding LastCommand, StringFormat=HH:mm:ss.fff}" Grid.Column="1" Grid.Row="2" IsReadOnly="True"/>
            <TextBlock Text="Repeats" Grid.Column="2" Grid.Row="1"/>
            <TextBox Text="{Binding CurrentRepeats}" Grid.Column="3" Grid.Row="1" IsReadOnly="True"/>
            <TextBlock Text="Max repeats:" Grid.Column="2" Grid.Row="2"/>
            <TextBox Text="{Binding MaxCountRepeat}" Grid.Column="3" Grid.Row="2" IsReadOnly="True"/>
        </Grid>
    </DataTemplate>

    <Style x:Key="BtnConnectStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Margin" Value="3,3,0,3"/>
        <Setter Property="Content" Value="{StaticResource DisconnectIcon}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsOpened}" Value="TRUE">
                <Setter Property="Content" Value="{StaticResource DisconnectIcon}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsOpened}" Value="FALSE">
                <Setter Property="Content" Value="{StaticResource ConnectIcon}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BtnStartStyle" TargetType="Button" BasedOn="{StaticResource MiddlBtnStyle}">
        <Setter Property="Content" Value="{StaticResource StartIcon}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsStarted}" Value="TRUE">
                <Setter Property="Content" Value="{StaticResource StartIcon}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsStarted}" Value="FALSE">
                <Setter Property="Content" Value="{StaticResource StopIcon}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FlyoutStatisticStyle" TargetType="controls:Flyout">
        <Setter Property="Margin" Value="0"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=TbSettings, Path=IsChecked}" Value="TRUE">
                <Setter Property="Margin" Value="0,360,0,0"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=TbSettings, Path=IsChecked}" Value="FALSE">
                <Setter Property="Margin" Value="0"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type dialogs:MessageDialog}"
               x:Key="NewCustomMessageDialogStyle"
               BasedOn="{StaticResource {x:Type dialogs:BaseMetroDialog}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type dialogs:BaseMetroDialog}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="DialogShownStoryboard">
                                <DoubleAnimation AccelerationRatio=".9"
                                                 BeginTime="0:0:0"
                                                 Duration="0:0:0.2"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="1" />
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid Background="{TemplateBinding Background}">
                            <Border FocusVisualStyle="{x:Null}"
                                    Focusable="False">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <ContentPresenter Grid.Row="0"
                                                      Content="{TemplateBinding DialogTop}" />
                                    <Grid Grid.Row="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="10*" />
                                            <ColumnDefinition Width="80*" />
                                            <ColumnDefinition Width="10*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid Grid.Column="1"
                                              Margin="0 10 0 0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Row="0"
                                                       FontSize="{DynamicResource DialogTitleFontSize}"
                                                       Foreground="{TemplateBinding Foreground}"
                                                       Text="{TemplateBinding Title}"
                                                       TextWrapping="Wrap" />
                                            <ContentPresenter Grid.Row="1"
                                                              Content="{TemplateBinding Content}" />
                                        </Grid>
                                    </Grid>
                                    <ContentPresenter Grid.Row="2"
                                                      Content="{TemplateBinding DialogBottom}" />
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <EventTrigger.Actions>
                                    <BeginStoryboard Storyboard="{StaticResource DialogShownStoryboard}" />
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type dialogs:MessageDialog}" BasedOn="{StaticResource NewCustomMessageDialogStyle}" />

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <tools:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
    <tools:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
</ResourceDictionary>