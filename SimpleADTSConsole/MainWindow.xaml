<controls:MetroWindow x:Class="SimpleADTSConsole.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:simpleAdtsConsole="clr-namespace:SimpleADTSConsole"
        xmlns:properties="clr-namespace:SimpleADTSConsole.Properties"
        xmlns:adjustingMode="clr-namespace:SimpleADTSConsole.AdjustingMode"
        xmlns:metrologyMode="clr-namespace:SimpleADTSConsole.MetrologyMode"
        Title="{x:Static properties:Resources.Title}" Height="800" Width="800" x:Name="Root"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance simpleAdtsConsole:ConsoleViewModel}"
        Closing="MainWindow_OnClosing" 
        GlowBrush="{DynamicResource AccentColorBrush}"
        Icon="Content/sparc.ico">
    <!-- ResizeMode="NoResize"-->
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Command="{Binding SwitchMetrologyMode}"
                    Gesture="Ctrl+M,M"/>
    </Window.InputBindings>
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <ToggleButton x:Name="TbSettings" Content="{StaticResource SettingsIcon}"
                          Visibility="{Binding IsMetrogyMode, Converter={StaticResource InverseBooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"/>
            <ToggleButton x:Name="TbStatistic" Content="{StaticResource StatisticIcon}"
                          Visibility="{Binding IsMetrogyMode, Converter={StaticResource InverseBooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"/>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>
    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl>
            <controls:Flyout
                IsOpen="{Binding ElementName=TbSettings, Path=IsChecked, Mode=TwoWay}"
                Header="Settings" Position="Right" Width="300">
                <StackPanel Margin="0">
                    <GroupBox Header="Themes" Margin="3"><!--Background="Transparent"-->
                        <StackPanel>
                            <RadioButton GroupName="ThemeGroup" Command="{Binding ChangeTheme}" CommandParameter="Blue">Blue</RadioButton>
                            <RadioButton GroupName="ThemeGroup" Command="{Binding ChangeTheme}" CommandParameter="Brown">Brown</RadioButton>
                            <RadioButton GroupName="ThemeGroup" Command="{Binding ChangeTheme}" CommandParameter="Amber">Amber</RadioButton>
                            <RadioButton GroupName="ThemeGroup" Command="{Binding ChangeTheme}" CommandParameter="Basedark">Basedark</RadioButton>
                            <RadioButton GroupName="ThemeGroup" Command="{Binding ChangeTheme}" CommandParameter="Baselight">Baselight</RadioButton>
                            <RadioButton GroupName="ThemeGroup" Command="{Binding ChangeTheme}" CommandParameter="Cobalt">Cobalt</RadioButton>
                            <RadioButton GroupName="ThemeGroup" Command="{Binding ChangeTheme}" CommandParameter="Crimson">Crimson</RadioButton>
                            <RadioButton GroupName="ThemeGroup" Command="{Binding ChangeTheme}" CommandParameter="Cyan">Cyan</RadioButton>
                            <RadioButton GroupName="ThemeGroup" Command="{Binding ChangeTheme}" CommandParameter="Emerald">Emerald</RadioButton>
                            <RadioButton GroupName="ThemeGroup" Command="{Binding ChangeTheme}" CommandParameter="Green">Green</RadioButton>
                            <RadioButton GroupName="ThemeGroup" Command="{Binding ChangeTheme}" CommandParameter="Indigo">Indigo</RadioButton>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Command log" Margin="3">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0">Depth log:</TextBlock>
                            <controls:NumericUpDown Grid.Column="1" Minimum="10" Maximum="10000" Interval="10" StringFormat="N0"
                                                    Value="{Binding Statistic.LogDepth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </GroupBox>
                    <!--<GroupBox Header="Languages">
                        <StackPanel>
                            <RadioButton GroupName="LangGroup" Command="{Binding ChangeLng}" CommandParameter="">Русский</RadioButton>
                            <RadioButton GroupName="LangGroup" Command="{Binding ChangeLng}" CommandParameter="en">Английский</RadioButton>
                        </StackPanel>
                    </GroupBox>-->
                </StackPanel>
            </controls:Flyout>
            <controls:Flyout
                IsOpen="{Binding ElementName=TbStatistic, Path=IsChecked, Mode=TwoWay}"
                Header="Statistic" Position="Right" Width="300" VerticalAlignment="Stretch" Style="{StaticResource FlyoutStatisticStyle}">
                <GroupBox Header="Parameters" Margin="3">
                    <ListView ItemsSource="{Binding Statistic.States}"
                              ItemTemplate="{StaticResource StatisticItemDt}"
                              VerticalAlignment="Stretch"/>
                </GroupBox>
            </controls:Flyout>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>
    <Grid IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}, UpdateSourceTrigger=PropertyChanged}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--<Button Grid.Column="0" Grid.Row="0" Command="{Binding SwitchConnect}" Width="65" Visibility="Collapsed">Connect</Button>-->
        <StackPanel Grid.Column="1" Grid.Row="0" Orientation="Vertical">
            <DockPanel>
                <Button Command="{Binding SwitchConnect}" Width="70" DockPanel.Dock="Left" Style="{StaticResource BtnConnectStyle}"/>
                <GroupBox Header="{x:Static properties:Resources.MetrologyToolsText}" IsEnabled="{Binding IsOpened, UpdateSourceTrigger=PropertyChanged}"
                          Visibility="{Binding IsMetrogyMode, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                    <ContentPresenter Content="{Binding AdtsMode}">
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate>
                                <metrologyMode:AdtsModePannel/>
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </GroupBox>

                <ContentPresenter Content="{Binding Logs}" IsEnabled="{Binding IsOpened, UpdateSourceTrigger=PropertyChanged}"
                                  Visibility="{Binding IsMetrogyMode, Converter={StaticResource InverseBooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                    <ContentPresenter.ContentTemplate>
                        <DataTemplate>
                            <adjustingMode:LogsReaderView DockPanel.Dock="Right"/>
                        </DataTemplate>
                    </ContentPresenter.ContentTemplate>
                </ContentPresenter>
                <!--<GroupBox Header="{x:Static properties:Resources.FromLog}" DockPanel.Dock="Right" IsEnabled="{Binding IsOpened, UpdateSourceTrigger=PropertyChanged}"
                          Visibility="{Binding IsMetrogyMode, Converter={StaticResource InverseBooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock >Log file:</TextBlock>
                        <TextBox Width="250" Text="{Binding Path, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Button Command="{Binding OpenFile}" Style="{StaticResource MiddlBtnStyle}" Width="20">...</Button>
                        <Button Command="{Binding StartFromFile}" Style="{StaticResource BtnStartStyle}"/>
                    </StackPanel>
                </GroupBox>-->
            </DockPanel>
            <DockPanel IsEnabled="{Binding IsOpened, UpdateSourceTrigger=PropertyChanged}">
                <ContentPresenter Content="{Binding Adjusting}"  
                                  Visibility="{Binding IsMetrogyMode, Converter={StaticResource InverseBooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                    <ContentPresenter.ContentTemplate>
                        <DataTemplate>
                            <adjustingMode:AdjustingView/>
                        </DataTemplate>
                    </ContentPresenter.ContentTemplate>
                </ContentPresenter>
            </DockPanel>

            <!--<GroupBox Header="Periodic" IsEnabled="{Binding IsOpened, UpdateSourceTrigger=PropertyChanged}"
                      Visibility="{Binding IsMetrogyMode, Converter={StaticResource InverseBooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock>Command:</TextBlock>
                    <TextBox Width="100" Text="{Binding PeriodicCommand, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock>Period:</TextBlock>
                    <TextBox Width="50"  Text="{Binding Period, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock>ms</TextBlock>
                    <Button Command="{Binding StartPeriodic}" Style="{StaticResource MiddlBtnStyle}">Set Period</Button>
                    <Button Command="{Binding StopPeriodic}" Style="{StaticResource MiddlBtnStyle}">Stop</Button>
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Scripts" IsEnabled="{Binding IsOpened, UpdateSourceTrigger=PropertyChanged}"
                      Visibility="{Binding IsMetrogyMode, Converter={StaticResource InverseBooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0">Scripts:</TextBlock>
                    <ComboBox Grid.Column="1" HorizontalAlignment="Stretch" Margin="3" ItemsSource="{Binding Scripts}"
                              SelectedItem="{Binding SelectedSctipt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              ItemTemplate="{StaticResource StriptDt}"/>
                    <Button Grid.Column="2" Command="{Binding StartSelectScript}" Style="{StaticResource BtnStartStyle}"/>
                </Grid>
            </GroupBox>
            <GroupBox Header="Simple" IsEnabled="{Binding IsOpened, UpdateSourceTrigger=PropertyChanged}"
                      Visibility="{Binding IsMetrogyMode, Converter={StaticResource InverseBooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock>Command:</TextBlock>
                    <TextBox Width="100" Text="{Binding Command, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Button Command="{Binding Send}" Style="{StaticResource MiddlBtnStyle}">Send</Button>
                    <Button Command="{Binding SendReceive}" Style="{StaticResource MiddlBtnStyle}">Send Receive</Button>
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Command compill" IsEnabled="{Binding IsOpened, UpdateSourceTrigger=PropertyChanged}"
                      Visibility="{Binding IsMetrogyMode, Converter={StaticResource InverseBooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock>Parameter:</TextBlock>
                        <ComboBox Width="100" ItemsSource="{Binding Parameters}" SelectedItem="{Binding SelectedParameter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock>Value:</TextBlock>
                        <TextBox Width="100" Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Button Command="{Binding CompilSetValue}" Style="{StaticResource BigBtnStyle}">Compil Set parameter</Button>
                        <Button Command="{Binding CompilGetValue}" Style="{StaticResource BigBtnStyle}">Compil Get parameter</Button>
                        <Button Command="{Binding CompilToControl}" Style="{StaticResource BigBtnStyle}">Compil To Control</Button>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Up down Test" IsEnabled="{Binding IsOpened, UpdateSourceTrigger=PropertyChanged}"
                      Visibility="{Binding IsMetrogyMode, Converter={StaticResource InverseBooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Width="90">Up PS:</TextBlock>
                        <TextBox Width="100" Text="{Binding UpPs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Width="90">Perod UpDown:</TextBlock>
                        <TextBox Width="100" Text="{Binding PeriodUpDown, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Button Command="{Binding UpDownTest}" Style="{StaticResource MiddlBtnStyle}">Up Down test</Button>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Width="90">Down PS:</TextBlock>
                        <TextBox Width="100" Text="{Binding DownPs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Width="90">Rate PS:</TextBlock>
                        <TextBox Width="100" Text="{Binding RatePs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Button Command="{Binding GoToGround}" Style="{StaticResource MiddlBtnStyle}">Go To Ground</Button>
                    </StackPanel>
                </StackPanel>
            </GroupBox>-->
        </StackPanel>
        <Grid Grid.Column="2" Grid.Row="0" Grid.RowSpan="2"
              Visibility="{Binding IsMetrogyMode, Converter={StaticResource InverseBooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <GroupBox Header="Commands Log" Grid.Row="0">
                <ScrollViewer Margin="3" VerticalScrollBarVisibility="Visible">
                    <DataGrid ItemsSource="{Binding Statistic.Log}" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Date" Binding="{Binding Timestamp, StringFormat=HH:mm:ss.fff}" Width="Auto"/>
                            <DataGridTextColumn Header="Command" Binding="{Binding Command}" Width="*"/>
                            <DataGridTextColumn Header="Answer" Binding="{Binding Answer}" Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </ScrollViewer>
            </GroupBox>
            <GroupBox Header="Log" Grid.Row="2">
                <ScrollViewer Margin="3" VerticalScrollBarVisibility="Visible">
                    <ListBox ItemsSource="{Binding Log}"/>
                </ScrollViewer>
            </GroupBox>
        </Grid>
    </Grid>
</controls:MetroWindow>



